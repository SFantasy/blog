<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[fanTasy | HomePage]]></title>
  <link href="/atom.xml" rel="self"/>
  <link href="/"/>
  <updated>2013-01-23T22:16:22+08:00</updated>
  <id>/</id>
  <author>
    <name><![CDATA[fanTasy shAo]]></name>
    
  </author>
  <generator uri="http://sfantasy.github.com/">fantasy | blog</generator>

  
  <entry>
    <title type="html"><![CDATA[Ignore the title]]></title>
    <link href="/2013-01-ignore-title/"/>
    <updated>2013-01-19T23:47:00+08:00</updated>
    <id>/ignore-title</id>
    <content type="html"><![CDATA[<ul>
<li><p>Delivering Happiness (三双鞋)</p>

<p> 回家的动车上看了大半本，后来两天陆陆续续的读完了整本书。
　　
　　起初还想吐槽下对于“三双鞋”这个书名的“看法”，后来看到书评里有本书的“小编”的解释，其实还是不太赞同，建议在后续再版的时候还是取一个“平实”的书名为好。
　　
　　看完留在脑海里的印象全是谢家华那出众的才华和胆识，当然，是在他长大、创业的旅途中显现出来的。
　　一个学习丝毫不认真、少年时期就一心想着赚钱然后迸出各种点子的男生就”稀里糊涂“地进了哈佛，而在进哈佛之后第一件事情居然是窝在寝室里看电视（没有记错的话），不得不说他是一个奇才。由于名校毕业，又轻松的进了这年头高高在上的Oracle……
　　然后，然后就是更为“辉煌”的创业生涯了－－网页设计、链接交换、美捷步。
　　
　　当然，文章中大篇幅的还是讲的谢家华在美捷步的经历。如何扩展销量、起死回生等等。其后还通过本书给我这种之前没有听说过美捷步文化的人一一细讲了文化内涵。
　　
　　能坚持、有胆识、敢拼老本、敢于创新，谢家华以后会不会给商业界带来惊喜？！</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[文副'揭秘']]></title>
    <link href="/2013-01-wen-fu-jie-mi/"/>
    <updated>2013-01-10T22:16:00+08:00</updated>
    <id>/wen-fu-jie-mi</id>
    <content type="html"><![CDATA[<ul>
<li>HTML5 up and running (HTML5揭秘)</li>
</ul>


<p>　  这本书是2010年出版的，而我却在HTML definition completed之后才读这本书。
　　其实评价“还行”有点不厚道，但是选择“推荐”又感觉不恰当，最终还是选择了“还行”。
　　一开始看这本书是下载的英文电子书，无耻的促进了盗版 :(
　　后来发现室友有这本实体书，就借来一阅。
　　
　　题取“揭秘“，文副其实。
　　虽然很多标签、特性都已经了解了，但是还是从头到尾看完了本书。
　　感觉还是介绍为主，不会教你如何去实现一个HTML5游戏或者应用，所以更像一本“科普”性质的书。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Boring Summary of 2012]]></title>
    <link href="/2012-12-a-boring-summary/"/>
    <updated>2012-12-31T11:01:00+08:00</updated>
    <id>/a-boring-summary</id>
    <content type="html"><![CDATA[<p>As 2012 is already in the end, it is really a tremendous fortune for us because 2012 is not the end of the world.</p>

<p>Looking back on my 2012, just as the old saying goes, "Life is short and time is swift.", 2012 is short and time is flash!</p>

<p>Now, you can read any part of me if you are interested in. (Pls don't use sarcasm as comments)</p>

<h2>Reading</h2>

<p>The number of books I read this year is more than it in the last two years(20 or more), which makes me feel shame for what I was doing during that time.</p>

<p>However, it is still not enough, as I saw many people in Turing community showing their reading list of 2012. It is also an inspire for you to have a look about this topic.</p>

<p>Here comes up an inspiring sentence,"Power is that the ones who are 10 times better than you works are still working harder than you."</p>

<p>Tragically, through the reading period, I did not have learnt a lot from books.</p>

<ul>
<li>Novels like "1988, I want to talk with the world" and "The Cathcer in the Rye" can only make me more disappointed about the social environment, which can reflect many phenomenons in China and also in other countries.</li>
</ul>


<p>What is more odd for me is that I have already lost confidence of living in such a hypocritical society: not only the party and the government officials, but also the average in the super markets and streets: the goods they threw away, the rude way they speak and the crowd crowding into buses, I began considering about the root of these uncivil behaviors. It is really OT, oh my goddess! Let me stop thinking about it.</p>

<ul>
<li><p>Books pertaining to Traveling and something related to it do waste money and time. I ever bought several ones and spent time envying that kind of life. Believe me, that is really wasting time and you can get nothing but envy.</p></li>
<li><p>Some books do take effect, such as "Dark Time" written by Wei.P.Liu. Reading books tagged psychology can make a true influence, just as what the author said in the book, "Everybody should have a look at books about psychology". As a result, I kept a to-do list for nearly a term and even try to plan my time in detail incredibly.</p></li>
<li><p>My attitude changed: I started having interest in Reading. As a result, I bought a tablet called Nexus 7 which is produced by my favorite company--Google. It is cute and only 7-inch.</p></li>
</ul>


<h2>Development</h2>

<p>I am always curious about new Technologies, which is really a disadvantage in my own eyes.</p>

<h4>Languages</h4>

<p>I was in the corner of the programming world and knew less about different languages, though I knew lots of names like ada, brain fuck and so on.
It's not suitable for me to discuss about the advantages and disadvantages about any language, because I am an expert of nothing.</p>

<p>This year, 2012, I have been touch with many different languages. However, this experience is really a chaos and make me stay being an expert of nothing.</p>

<p>Early in the past two years, I even regarded 'dynamic' the same as 'weakly typed', that is really ridiculous as far as I can see. And what make me more confused is that even some student who major in CS or SE do not know what is compiled language and what is interpreted language.</p>

<p>After the training this summer, I began to show large interest in front-end development rather than what rAy's favorite --JavaEE. I don't hate Java, nor do I like it. HTML is so simple and it is not known as a programming language, I agree with this point. But CSS is complicated than I expected, later I knew LESS, Stylus and other kinds of technologies which make CSS more like a language. Bootstrap and Metro UI CSS are what I used most until now, what really amazed me is O'reilly even published a book about using Bootstrap.</p>

<p>I read a JavaScript book in Head First series which is good for green-hand like me. However, with little chances to use it, I am still not able to develop a complex application which JavaScript is the major language. Libraries like jQuery, YUI, KISSY and Arale are what I want to learn to use in the coming new year. Later I knew Node.js, this makes me know more about JavaScript(if you never heard about it, Google and it may shock you), and I've ever tried to use it but not deeply.</p>

<p>Not long ago, I used an afternoon to read a book about Ruby in the library --Learning Ruby. That is a period I have began to learn Python. They are really similar with each other, while Ruby seems more flexible. I prefer Python, because it is more rigorous and it can do more than Ruby(maybe RoR is very popular nowadays in web development). I started to learn Python several months ago after I read a book called A Byte Of Python which is quite simple and brief. Later I started to use Django to develop web application, that is really easy for developers to quick start and deploy. During that time, the skill of building web pages improved. In daily life, I may use Python as a scripting language like shell scripting. They are both efficient, but Python seems more friendly to me. Learning Python is more likely a reference book on my bookshelf like Linux Shell Scripting Cookbook.</p>

<p>Some weeks ago, I began to read a book named Seven languages in seven weeks. I posted blogs to show my answers to the questions in that book, however my classmates seemed unhappy to see these blogs. I think I will not stop and finish it later. Blog is the highest level of self-expression, if anyone don't want to scan them, move your gaze down to others. I just want to record my journey and keep learning new things.</p>

<h4>Editors/IDE</h4>

<p>The debate between VIM and Emacs never stop just like the debate between Windows and Linux. So it is useless to convince others to use the same editor with you. I chose Emacs.</p>

<p>The first reason is Emacs is written by Richard Stallman, OK, this reason may be ridiculous; Second reason is I don't like the way VIM works --press ESC to change working condition , that is inefficient for me. Also, Emacs is written in lisp and that is the language standing on the top of programming, adoring made the choice; Another reason, lots of classmates chose VIM as their editor, I just want to be different and try a new way.</p>

<p>Sublime Text 2 is a outstanding editor. It is fast enough and more user-friendly, also, it supports lots of plugins for most languages. But I am not in favor of such a modern one, maybe I am out of time.</p>

<p>People call Emacs a editor, but those who are its super fan call it an OS rather than an IDE or even an editor. I'm trying to make it more likely an IDE to make me do things more efficient, to do this, I printed the GNU Emacs Reference Card and put it near my hand in order to learn to use it quicker. Maybe years later, it will be my mini OS in my Linux.</p>

<p>This year, Netbeans became my most used IDE as I have to write JSP files for our teams' projects. Netbeans is an excellent IDE for Java programming and front-end development. However, many other IDEs can do such kinds of works, too. Its interface is cleaner and simpler.</p>

<h2>Communities</h2>

<h4>Mailing List</h4>

<p>Mailing list is a little like forum. But they look totally different some times.</p>

<p>I subscribed some mailing list and received E-Mails from them everyday. I was excited to post my question in NJLUG first time. After several weeks, I created our team's mailing list. But it seemed that only predator.rAy was interested in communicating with E-Mails. That is a pity.</p>

<p>Now, I will check my GMail everyday(nearly all the time if I am online) and have a look at what people in groups are doing all day. CPyUG is such a big one that many topics are posted everyday, and I can see hot discusses everyday. NJLUG, HZLUG and SHLUG are all mailing list about Linux, but they are not as lively as CPyUG.</p>

<p>Mailing list is such a traditional but modern way, how I wish my mates can work together and use it with me.</p>

<h4>Q&amp;A sites</h4>

<p>We Chinese always copy ideas from foreigners'. Zhihu is the Chinese version of Quora, Segment Fault is the Chinese version of Stack Overflow.</p>

<p>In this year, I have tried to be a member of all this sites for a while or a long time. In Zhihu, if some famous people answer questions, they can always get voted even the answers are boring enough. Well, as what I experienced in Zhihu these weeks, I asked 4 questions which were all meanful but only 3 or less ones answered me. It is such a bad feeling that no one answered you in a Q&amp;A community. Then I turned to the original version of these kinds of sites --Quora. More comfortable, more honest and more equality. Stack Overflow is a new-born site in China ant the number of users in not large, but the ones on it are hot-hearted like the people in the QQ group --SF developers.</p>

<h4>Git/Github</h4>

<p>I joined Github in the early April this year. I even didn't know what Git is and the similar tools like  SVN or CVS though they are a little bit old-fashioned.</p>

<p>This summer, we use SVN to synchronize our codes on Google Code. SVN is quite simple and efficient. But Git has a strong point --commit changes to local server, that means we can commit our code any time even we are offline. Surly there exist lots of other advantages. Selfishly, Git is invented by Linus(I'm his big fan). And now, I am familiar with using Git and widen my knowledge about it.</p>

<p>I am still new to Github though it is 8 months after I registered. I am building my Git-page on it, putting my practice on it, doing projects with my mates on it and visiting famous projects on it. What else can I do? Maybe later I can contribute to some open source projects, that may be really cool!</p>

<h2>Addition</h2>

<ul>
<li>GFW</li>
</ul>


<p>Several days ago, I saw an issue which is opened in a project called mongol on Github. Here is the address of that project.</p>

<p>The reason why I support 'conanca' is very simple, GFW do block many sites and that is really inconvenient for us to use other 'cross-GFW' ways except modifying the hosts file. Buying a VPN account seems a good way, but that will surly cost money and we don't have any income in the college.
If we can save a website like Github from being blocked by GFW, why not?</p>

<p>Here I remember another topic of breaking GFW, some software like Free Gate are really evil! Though I am not a follower of CCP, but most of expressions are too disharmony. What do I mean? You can download a Free Gate and have a try.</p>

<p>Last two years, I am eager to break the GFW and excited about visiting Facebook, Twitter and Youtube. Yet not this year. Oppressing for years, we have little friends and nothing can we share there. The purpose of getting out is watching videos on Youtube, visiting blogs on Blogspot and download some files from blocked sites. It is really a luck for everyone that Google is not totally blocked in China except the time of NPC.</p>

<ul>
<li>Social Networks</li>
</ul>


<p>I tried to write an article about the future of SNS, but failed. As I considered, I didn't get rich understanding about the principles and the current situation. So I gave up.</p>

<p>I used to visit Renren often, but then turned into Weibo this year. They are really different social networks.</p>

<p>I preferred to Renren because I can see what my classmates(both high school and university, or even primary school) are doing recently. Are they happy these days or in sadness? What happen in their daily life? And what they are discussing about? That is quite an huge attraction of this kind of web sites. But after a long time, may be a year or two, it is becoming more and more obvious that the someone are over self-expressed while the others are not. Those who are too addicted to Renren always post some boring words or images, as you know, self-snapshots or something like that. Everything should be limited, you are taking photos all day and uploading them to Renren, I can not tolerate and have to block you.</p>

<p>But Weibo is different. Although I have less people known on it, I can follow many coders at work tagged Taobao, Python, JS or maybe Linux. What they push to the Internet is more valuable. And I can know many things earlier than ever before, I can know what is happening in the society but not limited to several campuses, I can get rid of those who like self-snapshot though I can block them in Renren. Weibo is a more efficient way to transport knowledge and technologies and it is also a higher level for self-expression.</p>

<ul>
<li>this.About</li>
</ul>


<p>With my poor English, welcome to point out my grammar bugs and I will fix them as soon as possible.
The reason why I wrote this article in English is that may make less people interested in this passage. If you are patient enough to read the whole sentences, you must find it is such a mess.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[这到底'他妈的'是一本什么书]]></title>
    <link href="/2012-12-what-a-fucking-book/"/>
    <updated>2012-12-04T12:00:00+08:00</updated>
    <id>/what-a-fucking-book</id>
    <content type="html"><![CDATA[<p>这是一本从一开始就满是脏话的小说，充斥着“他妈的”之类的话语。</p>

<p>其实这是很让人反感的一点，至少我是那么觉得的，所以在起初开始阅读这本书的时候的确有点怀疑——这到底“他妈的”是一本什么样的书？</p>

<p>不过让我觉得奇怪的是，出了令人反感的脏话，这本小说不同于以前看过的很多所谓的名著：阅读本书的时候不会觉得有什么“阻碍”。</p>

<p>这里的阻碍即阅读的时候出现的不快——对于个别生涩词藻的难以理解、对于上下文关系的难以在思维上进行愉快的连接……</p>

<p>所以从这一点来看，我又不禁觉得这是一本好书。</p>

<p>　　
阅读期间，一直想知道霍尔顿接下来会做什么事——难道我真的已经被这个被学校开除的男生的“吐槽”社会之旅给吸引了？！</p>

<p>我想，的确是的。</p>

<p>　
各种丑陋的学校、社会上人物的姿态在霍尔顿的瞳孔里被放大，这个愤世嫉俗的男孩的脑海里恐怕都是“伪君子”、“假模假式”之类词语。每个人的任何缺点都逃不出他的眼睛。</p>

<p>霍尔顿简直可以把自己称作“人性的侦探”。</p>

<p>　　
其实可以看出他看过很多文学的著作，包括诗歌、剧本、小说。</p>

<p>可是在潘西那个“遭透了的”学校里，却被几乎压抑成人格分裂，对，就是人格分裂。</p>

<p>当霍尔顿偷偷回到家里，见到妹妹之后，给人一种将压抑许久的、无处发泄的愤怒，都宣泄了出来，同时又给人一种——人格分裂的感觉。</p>

<p>　　
当他说出以后想当一个“麦田里的守望者”的时候，我又几乎动容了。</p>

<p>想象一个被学校、同学、社会上各种“假模假式”的人腐蚀很久的人，突然描绘出那么一副宁静、祥和、有爱心的场景，真的，感觉就像三井一头长发、跪在地上跟安西教练说“教练，我想打球”的样子。</p>

<p>　　
不过，有点出乎我意料的是：最后的结局。</p>

<p>我还真的天真的以为霍尔顿会搭车去西部，然后周围的人都不认识他，过上新的生活之类的，或者还会有一块麦田、然后做一个麦田里的守望者。</p>

<p>但是……他居然回去了！这也算是欧亨利式的结尾是么 ORZ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It is just for fun]]></title>
    <link href="/2012-12-it-just-for-fun/"/>
    <updated>2012-12-02T11:16:00+08:00</updated>
    <id>/it-just-for-fun</id>
    <content type="html"><![CDATA[<ul>
<li>《Just for fun》</li>
</ul>


<p>   说起Linux可能无人不知，说起Linus可能也万人敬仰，而这本Linus Torvalds的自传可能就相对默默无闻多了，全书不过100多页，却展现了Linus从小时候在外公膝盖上开始敲击键盘打字、在自己的小房间里“偶尔朝里扔一些意大利面条”近乎疯狂的编程、暑假与《操作系统：设计和执行》在床上度过；开发自己的操作系统取代原先自己使用的MINIX，并将其个放在网络上供人们自由下载；来到硅谷加入Transmeta后的生活等等。</p>

<p>   最让人印象深刻的是，Linus对名誉和利益的追求基本为0，凭借他的才智和能力，完全可以达到与Gates等人的地位，但是Linus所做的这一切都是为了一个简简单单的目的，即自己的兴趣，这也正是本书的主题：一切为了兴趣。(Just for fun！)</p>

<p>   同时Linux也是通过网络开发开源软件的典范，为开源（Open Source）以及自由软件联盟(FSF)的发展做出了极大的贡献。当然，开源并不意味着可以滥用，这里有牵扯到了知识产权、专利以及开源的相关概念，我们可以通过Google了解他们的区别与联系。包括《黑客与画家》涉及到开源方面观点的书都会谈到一些这样的话题，比如开源与专利是不矛盾的等等。</p>

<p>   这一类书（自传类的，还有《世界因你不同》之类的）读起来很快，而且很励志，看到伟人的生活与工作的历程总感觉有一股热量从身体中迸发出来。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try to use ORANGE: Classification]]></title>
    <link href="/2012-11-try-to-use-orange-classification/"/>
    <updated>2012-11-07T11:18:00+08:00</updated>
    <id>/try-to-use-orange-classification</id>
    <content type="html"><![CDATA[<h3>环境</h3>

<hr />

<p>Kubuntu 12.04/Python 2.7.3/Orange 2.0b</p>

<h3>准备工作</h3>

<hr />

<pre><code>#1.下载Orange的源码和Numpy的源码
#2.编译Numpy
#3.安装Python开发包
sudo apt-get install python-dev
#4.安装Python networkx包
sudo apt-get install python-networkx
#5.编译Orange
python install.py build
</code></pre>

<h3>测试</h3>

<hr />

<pre><code>import orange
#导入orange
orange.version
'2.0b (21:58:41, Nov 3 2012)'
</code></pre>

<h3>Classification</h3>

<hr />

<p>从<a href="http://archive.ics.uci.edu/ml/">UCI Machine Learning Repository</a>下载一个测试数据集；比如Voting.tab</p>

<h4>Naive Bayes classifier</h4>

<pre><code>import orange
data = orange.ExampleTable("voting")
classifier = orange.BayesLearner(data)
for i in range(5):
    c = classifier(data[i])
    print("original",data[i].getclass(),"classified as ",c)
</code></pre>

<p>输出结果</p>

<pre><code>original republican classified as  republican
original republican classified as  republican
original democrat classified as  republican
original democrat classified as  democrat
original democrat classified as  democrat
</code></pre>

<p>可以看出，Naive Bayes在第三个实例处出现了错误，但是其他的都是正确的。</p>

<pre><code>import orange
data = orange.ExampleTable("voting")
classifier = orange.BayesLearner(data)
corrcetNum = 0
#计数器
for i in data:
    a = i.getclass()
    b = classifier(i)
    if a == b:
        corrcetNum += 1

print "CA:%.3f" %(float(corrcetNum)/len(data))
#计算分类正确率
#输出结果
Possible classes: &lt;republican, democrat&gt;
CA:0.9034
</code></pre>

<p>可见，Naive Bayes在数据量比较大的时候分类的正确率还是比较高的。</p>

<h4>参考资料</h4>

<hr />

<ul>
<li>Orange reference : <a href="http://orange.biolab.si/doc/reference/">http://orange.biolab.si/doc/reference/</a></li>
<li>Orange tutorial : <a href="http://orange.biolab.si/doc/tutorial/">http://orange.biolab.si/doc/tutorial/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[随笔一篇]]></title>
    <link href="/2012-10-sui-bi-yi-pian/"/>
    <updated>2012-10-22T22:25:00+08:00</updated>
    <id>/sui-bi-yi-pian</id>
    <content type="html"><![CDATA[<p>不知道从什么时候开始，在身边很多人眼里，使用Linux 的人开始变成了装逼的代名词。</p>

<p>这以至于每当我在捣鼓自己的Kubuntu的时候，总会有无聊的声音传到耳蜗里。其中大多数都是根本不了解Linux的，以至于他们越说话就让我越觉得他们很无知;但是其实最让人感到郁闷的是那些懂一点相关知识的，有些是在自己的电脑上用过Ubuntu虚拟机的，有些是自认为对电脑很了解的，而有些是用过一段时间Linux无疾而终的。</p>

<p>为什么说这是最让人感到郁闷的呢？因为其实我一直都是觉得讨论操作系统优劣问题这个话题，以及编程语言优劣问题都是十分徒劳的：一个难当大任的操作系统或者编程语言在历史的进程中自然而然的会被淘汰，尤其是在现在这样一个科技日新月异的时代，所以就算各个“帮派”之间再怎么争破喉咙也是无济于事，不然Java作为一门饱受攻击的语言怎么还会有那么多程序员“不离不弃”呢？！</p>

<p>以下列举几个自己遇到的比较典型的情景。</p>

<ul>
<li><p>情景1-“Kubuntu啊，一听名字就是山寨的。” 不好意思，不知道是从哪里听   出来一点点山寨的意思的。请问你知道Kubuntu为什么叫Kubuntu么？那么比如他的名字是Xubuntu呢，也山寨么？你知道Ubuntu默认的是GNOME？Unity？你知道Linux有哪些桌面么？KDE？XFCE？LXDE？那么关于其他诸如Mint/Suse/Fedora/Arc等Linux发行版也就不用说了。举这个例子只是想说明一个问题：不能因为只听说过RedHat/Debian/Ubuntu这些有名的发行版就把自己的认知限于这一小隅，这好比去过外滩看过东方明珠和在建的上海中心却不知道上海还有田子坊这样的地方。</p></li>
<li><p>情景2-“为什么用Kubuntu啊，界面好看么？我觉得还没Win7好看呢。”的确，Win7的aero效果的确不错啊，就用户体验而言可以算是操作系统的一个典范;当然我不想纠结于操作系统的优劣之辩，不过前一句话后肯定跟着很多个“但是”。仅针对这个情景而言，我只能说我对于界面的要求没那么高，不然就去折腾KDE的3D界面效果了，听说很炫，怎么着也不会比Win7差吧，不过我还从未尝试过，觉得没有必要。</p></li>
<li><p>情景3-“Linux有什么好的，虚拟机跑跑还不够啊”其实我一直都觉得在虚拟机里跑的系统都是那些用户自己不会想去安装继而长期使用的。其实这又何异于超市里的免费品尝呢？需要买的东西自然会去选择、购买、长期拥有，但是有些对有些东西的需要只停留在试尝的程度。对于一个满心希望在Linux环境下学习工作娱乐的人，为什么要忍受win下的虚拟机呢？！</p></li>
<li><p>情景4-“你看，又装逼用Linux了，Linux有什么好用的啦。”首先，我觉得用Linux并没有什么可以用来装逼的资本，就如同围脖之于大众，豆瓣之于小众一样，Windows可以说是OS里的大众，那Linux也无非是一小众;我喜欢Linux胜过Windows，就像我喜欢豆瓣胜过微博一样。都是个人的选择，难道有人会在对方玩豆瓣的时候吐槽一句么？！</p></li>
</ul>


<p>从大一开始第一次接触到Linux到现在，以及受到包括ESR/RMS等的思想的熏陶，我才意识到自由软件运动与开放源代码的重要性和历史意义；虽然我还尚处于起步的阶段，而且也没有进入到狂热的状态，所以学习的进度可以说比较缓慢，直到这学期由于课程比较少才有了大把的时间来看书和实践，以及在LinuxToy/Study-Area/ChinaUnix等网站上久久流连和在王垠/ESR等人的文章上从钦佩到赞许。</p>

<p>最后，推荐几个网址：<br/>
* LinuxToy上的开源世界旅行手册：<a href="http://i.linuxtoy.org/docs/guide/">http://i.linuxtoy.org/docs/guide/</a><br/>
* Study-Area上的GNU/Linux学习之旅：<a href="http://www.study-area.org/tips/linux_entry.htm">http://www.study-area.org/tips/linux_entry.htm</a><br/>
* 王垠的wiki站和新浪博客：<a href="http://docs.huihoo.com/homepage/shredderyin/">http://docs.huihoo.com/homepage/shredderyin/</a><br/>
<a href="http://blog.sina.com.cn/yinwang0">http://blog.sina.com.cn/yinwang0</a><br/>
* joyfire的Linux笔记 <a href="http://man.lupaworld.com/content/develop/joyfire/">http://man.lupaworld.com/content/develop/joyfire/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experience of Using Bootstrap]]></title>
    <link href="/2012-10-experience-of-using-bootstrap/"/>
    <updated>2012-10-16T11:15:00+08:00</updated>
    <id>/experience-of-using-bootstrap</id>
    <content type="html"><![CDATA[<p>最近在捣鼓一个网站，然后也是第一次用到前端框架——bootstrap（详细关于bootstrap的信息参阅<a href="http://twitter.github.com/bootstrap/%EF%BC%89">http://twitter.github.com/bootstrap/%EF%BC%89</a>）</p>

<ul>
<li>使用bootstrap的感受</li>
</ul>


<p>    个人用起来感觉还不错，提供了很多平时建站时需要的组件如：按钮、导航栏、标签等；JS插件如：对话框、弹出提示、下拉项、输入提示等。
    在构建页面的时候只要稍稍修改一下CSS，并配合自己构建的HTML就可以作出比较好的效果。
    特别喜欢twitter的界面风格的同学可以尝试着用来创建相似界面风格的网站前台页面。而且个人觉得也比较小清新 : )</p>

<p>    记得是在知乎上看到对bootstrap的不满意，认为bootstrap制约了他的构建，并且推荐了另一个前端框架：foundation
个人暂时还没有用过，但是打算在下一次的时候尝试一下这个被称之为“更好的”框架。</p>

<ul>
<li>关于Jetstrap</li>
</ul>


<p> 这个工具有个视频介绍之：<a href="http://v.youku.com/v_show/id_XNDU0ODM5OTQw.html">http://v.youku.com/v_show/id_XNDU0ODM5OTQw.html</a></p>

<p>    我们也许可以称之为"网页版的构建纯bootstrap页面的Dreamweaver"。
用户可以通过Google、Twitter或者Github账户登录到这个站点上，免费给用户使用（据说未来可能收费），这里的所有组件都是可以拖拽的，可以通过用户自定义CSS进行一些细微的改变，并可以将HTML和CSS打包成zip文件，方便开发站点的前台页面。</p>

<p>    不过个人还是不喜欢这一类（可视化的）工具，当然也包括了Dreamweaver，反而喜欢用SublimeText2或者Emacs来写。当然，这纯属个人喜好，并不是说用可视化工具有什么不好。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Nexus 7 连接 Linux]]></title>
    <link href="/2012-10-nexus-lian-jie-linux/"/>
    <updated>2012-10-12T11:15:00+08:00</updated>
    <id>/nexus-lian-jie-linux</id>
    <content type="html"><![CDATA[<p>地址：<a href="http://archboy.org/2012/09/17/linux-connect-google-nexus-7-file-system-adb-development/">http://archboy.org/2012/09/17/linux-connect-google-nexus-7-file-system-adb-development/</a></p>

<p>Problem occured:</p>

<pre><code>$ sudo pacman -S libmtp mtpfs
</code></pre>

<p>在执行这条命令的时候出现了</p>

<pre><code>No protocol specified

No protocol specified

no display possibled
</code></pre>

<p>不过不影响接下来的步骤。</p>

<p>有趣的是，pacman就是“吃豆子”游戏……可以在终端中输入后玩 : )</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Revolution OS]]></title>
    <link href="/2012-10-revolution-os/"/>
    <updated>2012-10-02T11:16:00+08:00</updated>
    <id>/revolution-os</id>
    <content type="html"><![CDATA[<p>地址：<a href="http://www.ixck.com/dianying/2011/0326/273730.html">http://www.ixck.com/dianying/2011/0326/273730.html</a></p>

<p>《操作系统革命》，一部关于Open Source&amp;&amp;Linux的记录型电影。</p>

<p>Linus Torvalds/Richard Stallman/Eric Raymond/Brian Behlenodorf等大牛的采访记录。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A byte things about UNIX Shell]]></title>
    <link href="/2012-09-a-byte-things-about-unix-shell/"/>
    <updated>2012-09-30T11:11:00+08:00</updated>
    <id>/a-byte-things-about-unix-shell</id>
    <content type="html"><![CDATA[<p>最近在图书馆翻到了一本《Unix 技术手册（第三版）》，这本书是SVR4（System V Release 4）和Solaris7的技术参考手册；其实旁边还有一本相对比较新的第四版，不过那本太厚，而且琢磨着应该差不了多少，于是就拿着它翻了起来。
记得之前在看《鸟哥的Linux私房菜》的时候差不多翻到“学习shell与shell script”那一章，所以在阅读完介绍Unix的那一章以及跳过一大刀Unix命令的第二章后，看到了Unix shell的部分。</p>

<h2>Unix Shell</h2>

<h4>用途：</h4>

<p>1.交互式使用；2.定制Unix会话；3.编程。</p>

<h4>种类：</h4>

<p>1.Bourne shell；</p>

<p>2.Korn shell；</p>

<p>3.C shell。</p>

<p>我们常用的默认shell一般都是bash，也就是被Linus吐槽为“丑陋名称的”“Bourne-again shell”，也有听说是“Born-again shell”的意思。但是不管如何，bash总归是sh的超集（superset）；Korn shell (ksh) 也是 Bourne shell(sh)的增强版，不过与bash不同的是，ksh是贝尔实验室的一个名叫 David Korn 写的，而bash属于鼎鼎大名的GNU项目，所以使得所有的GUN/Linux（当然，还有Mac OS X）的默认shell 是bash。</p>

<p>当然，书中还提到了更加适合交互使用的C shell(csh)，一个从Berkeley孵化出来的shell版本，所以它也理所应当地在BSD(Berkeley Software Distribution)成为了默认shell。</p>

<p>我们可以在Linux 中用以下形式的命令来切换当前使用的shell：</p>

<pre><code>exec ksh
</code></pre>

<p>接下来简单的介绍一下bash的功能:</p>

<ul>
<li><p>输入输出重定向</p>

<pre><code>  echo "This is an example" &gt; a.txt
  #将输出文本重定向（在这里也就是保存）到一个文件中
</code></pre></li>
<li><p>文件名缩写用的通配符（元字符）
所谓通配符，举例来说：我们要删除所有文件格式为“.txt”的文件，使用“rm <em>.txt”就可以了，其中</em>就是所谓的“通配符”。</p></li>
<li><p>定制环境的shell变量</p></li>
<li><p>写shell程序用的内置命令集</p>

<pre><code>  echo"hello bash"
  #输出字符串
  exit    
  #退出bash
  wait
  #等待活动作业的完成
  type cmd  
  #查看一个命令是否是bash的内置命令
</code></pre></li>
<li><p>作业控制</p>

<pre><code>  bg
  #将作业置于后台运行
  fg
  #将作业置于前台运行
  jobs
  #查看当前活动作业
  kill
  #终止某作业
  wait
  #等待后台作业完成
  C-z
  #挂起当前作业
</code></pre></li>
<li><p>命令行编辑</p></li>
<li><p>命令历史</p></li>
</ul>


<p>可以输入“history”查看内存中所有的记忆下来的命令。当然也可以使用"history number“来查看最近number条的记录。</p>

<ul>
<li><p>别名</p>

<pre><code>  alias lm = ls -l | more
  #今后在bash中输入"lm" 就相当于输入了 "ls -l | more"
</code></pre></li>
</ul>


<p>当然将”alias“替换为”unalias“就可以将刚才设置好的别名去掉。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[黑客与画家]]></title>
    <link href="/2012-09-heike-yu-hua-jia/"/>
    <updated>2012-09-26T11:16:00+08:00</updated>
    <id>/heike-yu-hua-jia</id>
    <content type="html"><![CDATA[<ul>
<li>《黑客与画家》</li>
</ul>


<p>作者Paul Graham 就是传说中的硅谷创业之父，也可以说是互联网应用之父（源于其创办了第一个互联网应用程序“viaWeb”）。本书是他的文集，汇聚了有关“黑客精神“、”编程语言“、”创业历程“等话题，这次看的是中文版，得力于译者阮一峰的工作，读起这些文章来也甚是流畅带感。</p>

<p>   关于“黑客”(Hacker)这一话题，当然，还有一些关于开放源代码和自由软件的思想，恐怕没有能比Eric S.Raymond的五部曲阐述的更为清晰的了吧。你在Google的搜索栏上随便一艘就能找到那五篇让人读起来热血沸腾的文章，这是我之前浏览它们的地址：http://man.lupaworld.com/content/develop/joyfire/project/7.html</p>

<p>   如果你是一名Java程序员（这概率应该是很高的吧，身边学习Java语言的人太多了），那么可能在阅读这本书的时候会比较不开心了，也有可能越看越不开心了，作者是Lisp这门第二古老语言的推崇者，恐怕也是弱类型语言的支持者，而且在举到很多例子的时候感觉都用一种蔑视Java的态度。当然，关于编程语言之间的争斗恐怕也不止Paul一个人在吐槽别的语言吧。</p>

<p>   文集中还讲到了很多有关于软件开发和创业的思想，令我感到比较震惊的是作者的确很有预见性。比如对于互联网软件的未来，作者从职业生涯一开始就投入在了互联网软件上，并且十分自信的确定互联网软件必将取代桌面软件的既定事实；我想正是这种带有预见性的思想，才让他成立的了风投公司“Y Combinator”，也成为了硅谷的创业之父吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[暗时间]]></title>
    <link href="/2012-09-an-shi-jian/"/>
    <updated>2012-09-22T11:16:00+08:00</updated>
    <id>/an-shi-jian</id>
    <content type="html"><![CDATA[<ul>
<li>《暗时间》</li>
</ul>


<p>   这是一本貌似是心理学类的书籍，可当然也不只是心理学，由于作者刘未鹏本身就是一名资深程序员，所以在书中很多地方都会带有程序员性质的思考。刘未鹏笔下的“暗时间”，指的是生活中难以察觉和掌控的时间（比如，无所事事的时间，乘车、吃饭、行走、睡觉等等零碎的时间）。</p>

<p>   “在大三大四的时候，我就开始只用邮箱。”，这对于我们也许也是一个思考，现在的大学生（当然，我也是）总是把很多的精力消耗在了人人、facebook等SNS网站上，于是刘未鹏就滋生了这样一个简单的想法：有时间还不如看书。这也是我在大三的时候才意识到的一个问题（虽然觉得太晚，但也希望不是太晚），所以相比以前而言已经很少去关注人人上那些“无聊”的信息了。</p>

<p>   回来讲这本书，书的后面一部分《跟波利亚学解题》讲到很多有趣的算法问题，也推荐了一些算法书，比如《算法引论》等，所以才说这不仅是一本心理学的书籍，但也许可以称其为一本“程序员”心理书会比较妥当。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数学之美]]></title>
    <link href="/2012-09-shu-xue-zhi-mei/"/>
    <updated>2012-09-18T11:16:00+08:00</updated>
    <id>/shu-xue-zhi-mei</id>
    <content type="html"><![CDATA[<ul>
<li>《数学之美》</li>
</ul>


<p>   谈到数学，其实我还是很心虚的，因为就算在上课期间对于一些问题理解的不错，但总是成绩不佳，所幸还徘徊在及格线上沿处未曾下落。</p>

<p>   其实是直到读到这本书我才知道几何与代数原来还可以用来研发Google的Pagerank！所以至少我是很惊讶的，原来高数、几代、离散、概率书上的内容可以做那么酷的事情，如果让我在大学前就读了这本书的话，那么上课的时候肯定会认真百倍的，当然现实世界没有如果，而在大学之前也没有这本书 ：(。</p>

<p>   本书当然还涉及了很多技术方面的基本数学原理，包括“自然语言处理”、“中文分词”、“搜索引擎”等等。可以这么说，原先感觉离自己还很远的顶尖的技术，在吴军博士的文字下显得格外接近我们的学习的东西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ESR五步曲]]></title>
    <link href="/2012-08-esr-wu-bu-qu/"/>
    <updated>2012-08-31T11:11:00+08:00</updated>
    <id>/esr-wu-bu-qu</id>
    <content type="html"><![CDATA[<p><a href="http://man.lupaworld.com/content/develop/joyfire/project/7.html">ESR五部曲</a>
实训的时候看到的，Eric.S.Raymond写的五部曲。</p>

<p>只是现在其实很多内容都还受用不了，但是从部分思想来看，还是很受启发的，比如开源，比如软件开发的“市集”的概念之类的，当然还有关于Hacker文化的启迪，感觉ESR像是一个开源文化的传教士，让我深深的着迷于这种文化，而开始逐渐摒弃MS之类的文化。</p>

<p>个人感觉开源将是软件发展的大势所趋，闭门造车的公司文化可能就会像大清闭关锁国一样遭受灭顶之灾。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一座带我领略IT浪潮的灯塔]]></title>
    <link href="/2012-08-lang-chao-zhi-dian/"/>
    <updated>2012-08-02T11:16:00+08:00</updated>
    <id>/lang-chao-zhi-dian</id>
    <content type="html"><![CDATA[<ul>
<li>《浪潮之巅》</li>
</ul>


<p>   我们可以用一个短语来形容这本吴军博士的书：一座带你领略IT现代浪潮的灯塔。本书主要的内容是叙述各大IT公司的兴衰，包括了我曾听说过和未曾听说过的公司以及他们之间、内部的很多故事（当然也有MS如何从一个“模仿”别的公司软件开始发家的历程）。</p>

<p>   吴军博士的文字很有亲和力，也很让人着迷。读这本书的时候就感觉是自己翱翔在IT史的天空上，看着IBM成长为巨人，看着硅谷最初Stanford划出那么一块地用来给校友开公司以来、到21世纪Google与Facebook等公司的崛起，看了之后无论是对于商业还是业界都有了一定的认识。虽然可能在一些细节上可能有所偏失和未能严格考证（这本书烂在哪里），但还是很佩服吴博士能写出这样年代跨度十分大的书，毕竟这也不是一般人能够随随便便写出来的。所以还是很推荐大家看一看这本书，会有收获的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于文件权限]]></title>
    <link href="/2012-08-guan-yu-wen-jian-quan-xian/"/>
    <updated>2012-08-01T11:10:00+08:00</updated>
    <id>/guan-yu-wen-jian-quan-xian</id>
    <content type="html"><![CDATA[<p>记得原来的时候是看过相关的内容的，但是没有去记忆，所以看到的时候还是会说：“啊，原来是这样的啊！”</p>

<pre><code>-rw-r--r-- 1 root root 42304 Sep 4 18:26 install.log
</code></pre>

<p>其中第一个字符代表的是这个文件是“目录、文件或链接文件等”。如果是“d”即directory，是“l”则是linkfile，是“-”则是普通文件（若是b则是设备文件里面的可供存储的接口设备，c则是设备文件里面的串行端口设备）。后九个字符分别代表的是文件所有者权限、文件所属用户组的权限、其他人对此文件的权限（r即可读，w即可写，x即可执行）。</p>

<p>之后的数字代表的是文件的连接数；后两单词分别为文件所有者和文件所属用户组；43204即文件大小；之后便是文件最近修改日期和文件名。</p>

<p>平时对某些文件没有修改权限的时候，就经常会用到以下shell命令</p>

<pre><code>chmod 770 a.c
</code></pre>

<p>chmod是改变文件权限的命令，这个简单（而chgrp则是改变文件所属用户组，chown是改变文件所有者的命令），但是770的含义我本来是不知道的- -！</p>

<p>原来，三个数字代表着三种身份：owner、group、others对于文件的权限。</p>

<p>其中，r对应4，w对应2，x对应1；那么7也就是有读写和执行的权限，770也就是对于owner和group有着读写和执行的权限，但是对于others没有相关权限，当然，你也可以让others有相关的权限：</p>

<pre><code>chmod 777 a.c
</code></pre>

<p>还有就是关于chmod（chgrp&amp;&amp;chown）的一个比较重要的参数：-r（recursion）</p>

<p>比如对于一个目录而言，修改其所属用户组为users（存在这个用户组的前提下）</p>

<pre><code>chgrp users test
</code></pre>

<p>那么在这个test目录下其他的文件或者子文件夹也要一律修改所属用户组的话添加-r参数就可以了，即</p>

<pre><code>chgrp -r users test
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[忘记Root密码]]></title>
    <link href="/2012-07-wang-ji-rootmi-ma/"/>
    <updated>2012-07-01T11:18:00+08:00</updated>
    <id>/wang-ji-rootmi-ma</id>
    <content type="html"><![CDATA[<p>最近终于开始有点想看书的心思了，于是捧起鸟哥的“大作”开始啃了起来（《鸟哥的Linux私房菜》），以下空间用来Mark一下本人曾经遇到过的问题或者不曾理解的内容，由于水平有限，各种槽点请轻吐……</p>

<p>    </p>

<p>    记得第一次安装完Fedora之后就急匆匆地跑去上体育课了，然后回来居然怎么都无法正确的输入系统的密码，所以也就悲剧地无法进入系统的T<sup>T……记得Google了一些内容无果后，最终在室友的强烈建议下重装了系统。</sup></p>

<p>    “你只要以单用户维护模式登录即可更改你的root帐号密码。由于lilo这个引导程序已经很少见了，这里使用grub引导装载程序作为范例来介绍。</p>

<p>先将系统重启，在读秒的时候按下任意键就会出现如下内容：</p>

<pre><code>root (hd0,0)

kernel /vmlinuz-2.6.18-128.e15 ro root=LABEL=/ rhgb quiet

initrd /initrd-2.6.18-128.e15.img
</code></pre>

<p>时，请将光标移动到kernel那一行，再按一次e进入kernel该行的编辑界面中，然后在出现的界面当中，最后方输入single:</p>

<pre><code>kernel /vmlinuz-2.6.18-128.e15 ro root=LABEL=/ rhgb quieet single
</code></pre>

<p>再按下Enter确定之后，按下b就可以开机进入单用户维护模式了。在这个模式之下，你会在tty1的地方不需要输入密码即可取得终端的控制权（而且是使用root的身份）。之后就能够修改root的密码了，请使用下面的命令来修改root的密码。</p>

<pre><code>[root@www~]#passwd
</code></pre>

<p>接下来系统会要求你输入两次新的密码，然后再来reboot即可顺利修改root密码了。”（摘自《鸟哥的Linux私房菜（第三版）》）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用GAE和Chrome突破GFW]]></title>
    <link href="/2012-05-shi-yong-gaehe-chrometu-po-gfw/"/>
    <updated>2012-05-31T11:06:00+08:00</updated>
    <id>/shi-yong-gaehe-chrometu-po-gfw</id>
    <content type="html"><![CDATA[<p>看到文章标题想必屏幕前的你已经懂了我要讲什么。</p>

<p>这篇文章主要介绍了一种用Chrome app+GAE的方法，此前在网上也看到过用GAE的教程，不过没有去尝试；日天同学率先发现此方法并造福全寝 : )</p>

<p>以下方法在真实可行。</p>

<ol>
<li>安装Proxy Switchysharp</li>
</ol>


<p>这个应用在Chrome应用商店里自己搜就能搜到了；</p>

<p>添加到浏览器之后会有个选项卡跳出来，给自己的情景模式取个名字；</p>

<p>在手动配置里的HTTP代理那一栏里填上127.0.0.1；端口号为8086；</p>

<p>再把所有协议均使用相同的代理服务器那个选上。点击保存就行了。</p>

<ol>
<li>创建自己的Google App</li>
</ol>


<p>地址： <a href="https://appengine.google.com">https://appengine.google.com</a></p>

<p>点击createApplication后，在×××.appspot.com那栏里填app的名字， xxx是你自己取的名字，Application Title也是；</p>

<p>填好后直接Creaete Application 就好了；</p>

<ol>
<li>下载配置wallproxy</li>
</ol>


<p>地址：<a href="http://code.google.com/p/wallproxy-plugins/downloads/list">http://code.google.com/p/wallproxy-plugins/downloads/list</a>
这个list里有好几个文件，这次用的是wallproxy-plus.7z；</p>

<p>下载完成后直接解压就行，不用安装；</p>

<p>1)打开wallproxy目录下的server文件夹爱，运行upload.bat文件，先选择设置自己的appid，然后上传就行了，期间会让你填自己的邮箱地址和密码；</p>

<p> 可以上appengine看自己的app有没有上传成功，如果dashboard里有自己app运行的情况的话，就证明已经上传成功了。</p>

<p>2)打开wallproxy的目录里的local文件夹，打开WallProxy.exe文件，运行双击那个图标后会有一个console出来，最小化不要关闭；</p>

<p>右击图标设置，最主要要在里面改一个appid，也就是之前申请GoogleApp时候的app的名字；还有可以修改server type，可以在不同的类型之间试试，效果的确是有细微的差别的，这个在wallproxy的主页上说明了。</p>

<p>这样就搞定wallproxy了。</p>

<p>至此，在正确配置好app和wallproxy就已经可以跑到万里长城外面了。当然，你要在浏览的时候选择自己当初配置的情景模式。</p>

<p>在上网的时候一开始可能比较慢，但是后来还是蛮给力的，youtube可以看视频，其他测试的网站还有FB,Twitter,Blogger；</p>

<p>流量为一天1G，对于浏览一下网站已经很够用了。</p>
]]></content>
  </entry>
  
</feed>
