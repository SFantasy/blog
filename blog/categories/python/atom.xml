<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Python | fanTasy | blog]]></title>
  <link href="http://SFantasy.github.com/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://SFantasy.github.com/"/>
  <updated>2012-11-27T23:03:06+08:00</updated>
  <id>http://SFantasy.github.com/</id>
  <author>
    <name><![CDATA[fanTasy shAo]]></name>
    <email><![CDATA[forever.fantasy27@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Try to use ORANGE: Classification]]></title>
    <link href="http://SFantasy.github.com/blog/2012/11/07/try-to-use-orange-classification/"/>
    <updated>2012-11-07T11:18:00+08:00</updated>
    <id>http://SFantasy.github.com/blog/2012/11/07/try-to-use-orange-classification</id>
    <content type="html"><![CDATA[<h3>环境</h3>

<hr />

<p>Kubuntu 12.04/Python 2.7.3/Orange 2.0b</p>

<h3>准备工作</h3>

<hr />

<p>```bash</p>

<h1>1.下载Orange的源码和Numpy的源码</h1>

<h1>2.编译Numpy</h1>

<h1>3.安装Python开发包</h1>

<p>sudo apt-get install python-dev</p>

<h1>4.安装Python networkx包</h1>

<p>sudo apt-get install python-networkx</p>

<h1>5.编译Orange</h1>

<p>python install.py build
```</p>

<h3>测试</h3>

<hr />

<p>```python
import orange</p>

<h1>导入orange</h1>

<p>orange.version
'2.0b (21:58:41, Nov 3 2012)'
```</p>

<h3>Classification</h3>

<hr />

<p>从<a href="http://archive.ics.uci.edu/ml/">UCI Machine Learning Repository</a>下载一个测试数据集；比如Voting.tab</p>

<h4>Naive Bayes classifier</h4>

<p>```python
import orange
data = orange.ExampleTable("voting")
classifier = orange.BayesLearner(data)
for i in range(5):</p>

<pre><code>c = classifier(data[i])
print("original",data[i].getclass(),"classified as ",c)
</code></pre>

<p>```
输出结果</p>

<p><code>bash
original republican classified as  republican
original republican classified as  republican
original democrat classified as  republican
original democrat classified as  democrat
original democrat classified as  democrat
</code>
可以看出，Naive Bayes在第三个实例处出现了错误，但是其他的都是正确的。</p>

<p>```python
import orange
data = orange.ExampleTable("voting")
classifier = orange.BayesLearner(data)
corrcetNum = 0</p>

<h1>计数器</h1>

<p>for i in data:</p>

<pre><code>a = i.getclass()
b = classifier(i)
if a == b:
    corrcetNum += 1
</code></pre>

<p>print "CA:%.3f" %(float(corrcetNum)/len(data))</p>

<h1>计算分类正确率</h1>

<p>```
输出结果</p>

<p><code>bash
Possible classes: &lt;republican, democrat&gt;
CA:0.9034
</code>
可见，Naive Bayes在数据量比较大的时候分类的正确率还是比较高的。</p>

<h4>参考资料</h4>

<hr />

<ul>
<li>Orange reference : <a href="http://orange.biolab.si/doc/reference/">http://orange.biolab.si/doc/reference/</a></li>
<li>Orange tutorial : <a href="http://orange.biolab.si/doc/tutorial/">http://orange.biolab.si/doc/tutorial/</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
